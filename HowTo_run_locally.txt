instalujemy railsy wedlug instrukcji 

=====================

https://gorails.com/setup/ubuntu/18.10

tj.

curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list

sudo apt-get update
sudo apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev software-properties-common libffi-dev nodejs yarn

cd
git clone https://github.com/rbenv/rbenv.git ~/.rbenv
echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
echo 'eval "$(rbenv init -)"' >> ~/.bashrc
exec $SHELL

git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bashrc
exec $SHELL

rbenv install 2.6.1
rbenv global 2.6.1
ruby -v

gem install bundler

curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
sudo apt-get install -y nodejs

gem install rails -v 5.2.2

rails -v

sudo sh -c "echo 'deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main' > /etc/apt/sources.list.d/pgdg.list"
wget --quiet -O - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | sudo apt-key add -
sudo apt-get update
sudo apt-get install postgresql-common
sudo apt-get install postgresql-9.5 libpq-dev

#### dodanie uprawnien swojemu uzytkownikowi w nazwa_usera dla postgresa 
sudo -u postgres createuser nazwa_usera -s

gem update --system
gem install bundler
bundler update --bundler


==================

w ostatnim etapie oczywiscie nie wykonujemy final steps tylko zaciagamy projekt z gita
zwykle zapuszczenie rails server prawdopodobnie wysypie bledy
u mnie pomoglo:
1. odpalenie komendy bin/bundle install
2. modyfikacja pliku Gemfile a mianowicie linji z sqlite3. linijka powinna wygladac tak: gem 'sqlite3', '~>1.3.6'. po modyfikacji pliku Gemfile musimy jeszcze raz wykonac krok 1!!!!
3. odpalenie komendy bin/rails db:migrate RAILS_ENV=development

po wykonaniu powyzszego wystarczy zapodac komende rails server, poczekac chwile az wszystko wstanie i mozemy "strzelac" na localhost:3000 

testy uruchamiamy komenda rails test
